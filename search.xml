<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实现鼠标悬停在文字上时,改变文字的颜色和背景的颜色</title>
      <link href="/2023/07/change_text_background_color.html"/>
      <url>/2023/07/change_text_background_color.html</url>
      
        <content type="html"><![CDATA[<style>.text_mask{    font-family: 'SF Pro SC','SF Pro Display','PingFang SC','Lucida Grande','Helvetica Neue',Helvetica,Arial,Verdana,sans-serif,'Hiragino Sans GB';    word-wrap: break-word;    line-height: 1.6;    font-size: 14px;    white-space: normal;    border-radius: 2px;    background-clip: padding-box;    -webkit-transition: all .5s linear;    text-shadow: #555 0 0 20px;    background-color: #555;    color: #555;    border: 1px solid #555;}mask:hover{color:white;background-color:#555;}</style><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>在逛 <a href="https://bangumi.tv/">bangumi</a>时, 发现了一个有趣的事情. 句子默认以黑色块的形式展现(比如这样: <mask class="text_mask">巴拉巴拉…</mask>), 当鼠标悬停在句子上后, 浮现出白色的文字, 挺有意思, 我下面将在 <code>markdown</code> 中实现这一效果.<mask class="text_mask">虽然说markdown的优点之一是: “排版语法简洁，让人们更多地关注内容本身而非排版”, 这么做显得有些花里胡哨了(～￣▽￣)～</mask></p><h2 id="2-实现步骤"><a href="#2-实现步骤" class="headerlink" title="2. 实现步骤"></a>2. 实现步骤</h2><p>这其实就是一个简单的css改变文字显示效果的应用.  </p><ol><li>首先在文章的任意位置加上下面的代码(我比较喜欢加在文章的顶部位置)</li></ol><pre><code class="html">&lt;style&gt;.text_mask&#123;    font-family: &#39;SF Pro SC&#39;,&#39;SF Pro Display&#39;,&#39;PingFang SC&#39;,&#39;Lucida Grande&#39;,&#39;Helvetica Neue&#39;,Helvetica,Arial,Verdana,sans-serif,&#39;Hiragino Sans GB&#39;;    word-wrap: break-word;    line-height: 1.6;    font-size: 14px;    white-space: normal;    border-radius: 2px;    background-clip: padding-box;    -webkit-transition: all .5s linear;    text-shadow: #555 0 0 20px;    background-color: #555;    color: #555;    border: 1px solid #555;&#125;mask:hover&#123;color:white;background-color:#555;&#125;&lt;/style&gt;</code></pre><ol start="2"><li>然后将想要想要隐藏的句子填写在下面代码的 <code>$1</code> 处就完成了</li></ol><pre><code class="html">&lt;mask class=&quot;text_mask&quot;&gt;$1&lt;/mask&gt;</code></pre><h2 id="3-在vscode中便捷地实现这一效果"><a href="#3-在vscode中便捷地实现这一效果" class="headerlink" title="3. 在vscode中便捷地实现这一效果"></a>3. 在vscode中便捷地实现这一效果</h2><p>在 <code>visual studio code(vscode)</code> 软件中, 我们可以自定义代码片段. 通过代码快速补全, 我们可以快速地完成上面的代码. 具体步骤如下:  </p><ol><li>点击vscode走下方的 <code>齿轮</code> 按钮,  </li><li>点击 <code>User Snippets</code>, (大概在倒数第三项)</li><li>在弹出的框中选择 <code>markdown.json</code></li><li>复制下列代码, 粘贴到 <code>markdown.json</code> 文件中</li></ol><!-- markdownlint-disable MD010--><pre><code class="json">    &quot;text-mask-css&quot;:&#123;        &quot;prefix&quot;: &quot;text-mask-css&quot;,        &quot;body&quot;: [            &quot;&lt;style&gt;\n.text_mask\n&#123;\n    font-family: &#39;SF Pro SC&#39;,&#39;SF Pro Display&#39;,&#39;PingFang SC&#39;,&#39;Lucida Grande&#39;,&#39;Helvetica Neue&#39;,Helvetica,Arial,Verdana,sans-serif,&#39;Hiragino Sans GB&#39;;\n    word-wrap: break-word;\n    line-height: 1.6;\n    font-size: 14px;\n    white-space: normal;\n    border-radius: 2px;\n    background-clip: padding-box;\n    -webkit-transition: all .5s linear;\n    text-shadow: #555 0 0 20px;\n    background-color: #555;\n    color: #555;\n    border: 1px solid #555;\n&#125;\nmask:hover&#123;\ncolor:white;\nbackground-color:#555;\n&#125;\n&lt;/style&gt;&quot;,        ]    &#125;,    &quot;text-mask&quot;:&#123;        &quot;prefix&quot;: &quot;text-mask&quot;,        &quot;body&quot;: [            &quot;&lt;mask class=\&quot;text_mask\&quot;&gt;$1&lt;/mask&gt;&quot;,        ]    &#125;,</code></pre><p>现在我们在 <code>markdown</code> 文件中输入 <code>text</code>, 就会出现如下的选项:  </p><p><img src="https://jiangy-asset.oss-cn-beijing.aliyuncs.com/tmp/202304132200330.png"></p><p>我们可以通过选择 <code>text-mask-css</code> 或 <code>text-mask</code> 进行快速补全啦~</p><h2 id="4-测试文本"><a href="#4-测试文本" class="headerlink" title="4. 测试文本"></a>4. 测试文本</h2><p>读者可以将下面的文本粘贴到 <code>markdown</code> 文件中, 测试效果</p><pre><code class="md">&lt;style&gt;.text_mask&#123;    font-family: &#39;SF Pro SC&#39;,&#39;SF Pro Display&#39;,&#39;PingFang SC&#39;,&#39;Lucida Grande&#39;,&#39;Helvetica Neue&#39;,Helvetica,Arial,Verdana,sans-serif,&#39;Hiragino Sans GB&#39;;    word-wrap: break-word;    line-height: 1.6;    white-space: normal;    border-radius: 2px;    background-clip: padding-box;    -webkit-transition: all .5s linear;    text-shadow: #555 0 0 20px;    background-color: #555;    color: #555;    border: 1px solid #555;&#125;mask:hover&#123;color:white;background-color:#555;&#125;&lt;/style&gt;## &lt;mask class=&quot;text_mask&quot;&gt;测试标题&lt;/mask&gt;&lt;mask class=&quot;text_mask&quot;&gt;测试文本&lt;/mask&gt;</code></pre><h2 id="5-补充"><a href="#5-补充" class="headerlink" title="5. 补充"></a>5. 补充</h2><p>上面的代码中, 最核心的是下面这一部分, 其他的代码是为了设置字体的大小, 字体的阴影效果等</p><pre><code class="html">&lt;style&gt;.text_mask&#123;    background-color: #555;    color: #555;&#125;mask:hover&#123;color:white;background-color:#555;&#125;&lt;/style&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 实用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>介绍RNA-seq流程及其常用代码</title>
      <link href="/2023/07/introduce_rna_seq.html"/>
      <url>/2023/07/introduce_rna_seq.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><h2 id="2-Linux环境搭建"><a href="#2-Linux环境搭建" class="headerlink" title="2. Linux环境搭建"></a>2. Linux环境搭建</h2><h3 id="2-1-安装软件"><a href="#2-1-安装软件" class="headerlink" title="2.1. 安装软件"></a>2.1. 安装软件</h3><p>在 <em>miniconda</em> 中安装如下的软件.</p><pre><code class="text">samtools, fastqc, multiqc, cutadapt, trim-galore, hisat2, subread, featurecounts</code></pre><h3 id="2-2-创建工作目录"><a href="#2-2-创建工作目录" class="headerlink" title="2.2. 创建工作目录"></a>2.2. 创建工作目录</h3><pre><code class="bash">cd ~mkdir 23-rna-seq-7-2cd 23-rna-seq-7-2mkdir 10-raw 11-fastqc 13-multiqc \21-trim-galore 23-fastqc 25-multiqc \31-hisat2-index 33-hisat2-result \41-sam-to-bam 43-sorted-bam \51-human-gtf 53-fc-resul-bad 55-fc-result </code></pre><h3 id="2-3-下载脚本"><a href="#2-3-下载脚本" class="headerlink" title="2.3. 下载脚本"></a>2.3. 下载脚本</h3><!-- TODO: 提供脚本的网站 --><h2 id="3-数据下载"><a href="#3-数据下载" class="headerlink" title="3. 数据下载"></a>3. 数据下载</h2><ul><li>下载初始 <code>fastq</code> 数据</li></ul><pre><code class="bash"># 进入vimvi batch-script.sh# 输入以下的内容download_fastq() &#123; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039508_1.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039508_2.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039509_1.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039509_2.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039512_1.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039512_2.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039513_1.fastq.gz &amp; nohup wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/004/SRR1039514/SRR1039513_2.fastq.gz &amp;&#125;download_fastq# 退出vim# 运行脚本bash batch-script.sh# 之后可以注释 download_fastq 行, 并在 batch-script.sh 文件中加入下面的代码, 依次运行和注释相关的代码</code></pre><ul><li>下载 <code>hisat2</code> 需要的参考基因组</li></ul><!-- TODO:  --><h2 id="4-质量检测"><a href="#4-质量检测" class="headerlink" title="4. 质量检测"></a>4. 质量检测</h2><pre><code class="bash">run_fastqc()&#123; filedir=$1 fqdir=$2 ls $&#123;filedir&#125;*gz | while read id  do  nohup fastqc $id -t 10 -o $fqdir &amp; done&#125;run_fastqc ~/23-rna-seq-7-2/10-raw/ ~/23-rna-seq-7-2/11-fastqc/# multiqc暂时需要手动运行</code></pre><h2 id="5-数据过滤"><a href="#5-数据过滤" class="headerlink" title="5. 数据过滤"></a>5. 数据过滤</h2><pre><code class="bash">run_trim_galore() &#123; basedir=~/23-rna-seq-7-2/10-raw/ outdir=~/23-rna-seq-7-2/21-trim-galore/ for i in 08 09 12 13 do  fq1=SRR10395$&#123;i&#125;_1.fastq.gz  fq2=SRR10395$&#123;i&#125;_2.fastq.gz  path1=$&#123;basedir&#125;$&#123;fq1&#125;  path2=$&#123;basedir&#125;$&#123;fq2&#125;  #echo $path1 $path2 $outdir  nohup trim_galore -q 28 --phred33 --length 30 --paired -e 0.1 --stringency 1 -o $outdir $path1 $path2 &amp; done&#125;run_trim_galore# 运行结束后, 需要再次运行 run_fastqc, 查看过滤的结果# run_fastqc ~/23-rna-seq-7-2/21-trim-galore/ ~/23-rna-seq-7-2/23-fastqc</code></pre><h2 id="6-序列比对"><a href="#6-序列比对" class="headerlink" title="6. 序列比对"></a>6. 序列比对</h2><ul><li>运行 <code>hisat2</code></li></ul><pre><code class="bash">run_hisat2() &#123; index=~/23-rna-seq-7-2/31-hisat2-index/hg19/genome indir=~/23-rna-seq-7-2/21-trim-galore/ outdir=~/23-rna-seq-7-2/33-hisat2-result/ #cat ~/apa/align/input |while read id prefix=SRR10395 for id in 08 09 12 13 do      #arr=( $id )  val1=$&#123;indir&#125;$&#123;prefix&#125;$&#123;id&#125;_1_val_1.fq.gz  val2=$&#123;indir&#125;$&#123;prefix&#125;$&#123;id&#125;_2_val_2.fq.gz  outfile=$&#123;outdir&#125;$&#123;prefix&#125;$&#123;id&#125;  #echo -e &quot;$val1\n$val2\n$outfile\n\n&quot;  nohup hisat2 -p 20 -x $index -1 $val1 -2 $val2 -S $&#123;outfile&#125;.sam  2&gt; $&#123;outfile&#125;.hisat2.log &amp; done&#125;run_hisat2</code></pre><ul><li>查看比对结果</li></ul><pre><code class="bash">view_flagstat() &#123; dir=~/23-rna-seq-7-2/33-hisat2-result/ realpath $&#123;dir&#125;*.sam | while read id do  #echo -e &quot;$id\n$&#123;id&#125;.flagstat.txt\n\n&quot;  nohup samtools view -@ 10 -S -b $&#123;id&#125;  | samtools flagstat - &gt; $&#123;id&#125;.flagstat.txt &amp; done&#125;view_flagstat</code></pre><h2 id="7-表达量计数"><a href="#7-表达量计数" class="headerlink" title="7. 表达量计数"></a>7. 表达量计数</h2><ul><li>将 <code>sam</code> 文件转化为 <code>bam</code> 文件</li></ul><pre><code class="bash">sam_to_bam() &#123; dir=~/23-rna-seq-7-2/33-hisat2-result/ ls $&#123;dir&#125;*.sam | while read id do  id=$(basename $id)  #echo -e &quot;$id\n$&#123;dir&#125;$&#123;id&#125;\n\n&quot;  nohup samtools view -bS $&#123;dir&#125;$&#123;id&#125; &gt; $&#123;dir&#125;../41-sam_to_bam/$&#123;id/.sam/.bam&#125; &amp; done&#125;sam_to_bam</code></pre><ul><li>对 <code>bam</code> 文件进行排序</li></ul><pre><code class="bash">sort_bam() &#123; dir=$1 realpath $&#123;dir&#125;*.bam | while read id do  filename=$(basename $id)  output=$&#123;dir&#125;../43-sorted-bam/$&#123;filename/.bam/.sort.bam&#125;  #echo $output  nohup samtools sort -@ 10  $id -o $output &amp; done&#125;sort_bam ~/23-rna-seq-7-2/41-sam_to_bam/</code></pre><ul><li>创建索引</li></ul><pre><code class="bash">create_index() &#123; dir=$1 realpath $&#123;dir&#125;*.bam | while read id do  #echo $id\n  nohup samtools index -@ 10 $id &amp; done&#125;create_index ~/23-rna-seq-7-2/43-sorted-bam/</code></pre><ul><li>运行 <code>featureCounts</code></li></ul><pre><code class="bash">run_featureCounts() &#123; gtf=~/23-rna-seq-7-2/51-human-gtf/gencode.v43.annotation.gtf basedir=$1 outdir=$2 input=$&#123;basedir&#125;*.bam #realpath $outdir; ls $input nohup featureCounts -p -O -T 10 -a $gtf -o $&#123;outdir&#125;counts.txt $input &amp;&#125;run_featureCounts ~/23-rna-seq-7-2/43-sorted-bam/ ~/23-rna-seq-7-2/55-fc-result/</code></pre><h2 id="8-差异表达分析"><a href="#8-差异表达分析" class="headerlink" title="8. 差异表达分析"></a>8. 差异表达分析</h2><h2 id="9-富集分析"><a href="#9-富集分析" class="headerlink" title="9. 富集分析"></a>9. 富集分析</h2>]]></content>
      
      
      <categories>
          
          <category> 生信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RNA-Seq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装和使用miniconda的通用流程</title>
      <link href="/2023/07/introduce_miniconda.html"/>
      <url>/2023/07/introduce_miniconda.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>这篇文章主要用于笔者自己快速创建miniconda的初始环境.</p><h2 id="2-安装和配置miniconda"><a href="#2-安装和配置miniconda" class="headerlink" title="2. 安装和配置miniconda"></a>2. 安装和配置miniconda</h2><pre><code class="bash"># 进入miniconda官网, 寻找最新的安装包https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/?C=M&amp;O=D# 下载安装包wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh# 安装bash Miniconda3-py39_4.9.2-Linux-x86_64.sh## 注意设置安装的位置# 添加到环境变量export PATH=&quot;$PATH:~/1_opt/miniconda3/bin/&quot;# 添加清华镜像conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/conda config --add channels http://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/# 恢复默认源conda config --remove-key channels## 如果defaults已被删除，不会被恢复# 设置可见安装包的URLconda config --set show_channel_urls yes## 使用conda install, 会显示每个软件包的URL。这对于调试和排除问题非常有用# conda 设置不自动进入base(最基础)环境conda config --set auto_activate_base false</code></pre><h2 id="3-管理虚拟环境"><a href="#3-管理虚拟环境" class="headerlink" title="3. 管理虚拟环境"></a>3. 管理虚拟环境</h2><pre><code class="bash"># 下列代码来自: &lt;https://juejin.cn/post/7078965942968909854&gt;# 查看虚拟环境列表conda env listconda info -e# 创建虚拟环境conda create -n &lt;env_name&gt; [python_version] [package_name]conda create -n pyenv python=3.6 requestsconda create -n pyenv# 复制虚拟环境conda create --name &lt;new_env_name&gt; --clone &lt;old_env_name&gt;# 删除虚拟环境conda remove -n &lt;env_name&gt; --all# 激活虚拟环境conda activate &lt;env_name&gt; # 退出虚拟环境(进入环境状态下才可使用)conda deactivate </code></pre><h2 id="4-管理包"><a href="#4-管理包" class="headerlink" title="4. 管理包"></a>4. 管理包</h2><pre><code class="bash"># 下列代码来自: &lt;https://juejin.cn/post/7078965942968909854&gt;# 查看所有包conda list -n &lt;env_name&gt;  # 若不指定-n，默认在当前的环境# 搜索某个包信息conda search &lt;package_name&gt;  # 查询包的版本# 安装conda install -n &lt;env_name&gt; -c 镜像地址 &lt;package_name&gt;  # 若不指定-n，默认在当前的虚拟环境conda install &lt;package_name&gt;conda install &lt;package_name&gt;=1.5.0  # 指定版本conda install &lt;package_name&gt; -y # 自动确认安装package# 更新# 更新当前环境所有包conda update --all# 更新指定包conda update -n &lt;env_name&gt; &lt;package_name&gt;  # 若不指定-n，默认在当前的虚拟环境conda update &lt;package_name&gt;# 删除conda remove -n &lt;env_name&gt; &lt;package_name&gt;  # 若不指定-n，默认在当前的虚拟环境conda remove &lt;package_name&gt;</code></pre><h2 id="5-其他信息"><a href="#5-其他信息" class="headerlink" title="5. 其他信息"></a>5. 其他信息</h2><p>可以在<a href="https://bioconda.github.io/conda-package_index.html">https://bioconda.github.io/conda-package_index.html</a>检查包是否存在, 用于解决有时<code>conda search &lt;package_name&gt;</code>运行缓慢的问题.</p><h2 id="6-质量不错的文章"><a href="#6-质量不错的文章" class="headerlink" title="6. 质量不错的文章"></a>6. 质量不错的文章</h2><ol><li><a href="https://www.jianshu.com/p/854b11a18bef">Linux Miniconda安装及其使用 - 简书</a></li><li><a href="https://juejin.cn/post/7078965942968909854">Miniconda 安装及使用 - 掘金</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CheatSheet </tag>
            
            <tag> 软件介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/index.html"/>
      <url>/2023/07/index.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
